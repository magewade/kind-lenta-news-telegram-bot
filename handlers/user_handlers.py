from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from lexicon.lexicon import LEXICON
import aiohttp
from aiogram import Router

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router = Router()

@router.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(text=LEXICON['/start'])

@router.message(Command(commands='help'))
async def process_help_command(message: Message):
    await message.answer(text=LEXICON['/help'])

@router.message(Command(commands="cat"))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º router.message –≤–º–µ—Å—Ç–æ dp.message
async def cat_message(message: Message):

    url = "https://api.thecatapi.com/v1/images/search"

    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            print(f"–û—Ç–≤–µ—Ç API: {response.status}")  

            if response.status == 200:
                data = await response.json()
                print("–û—Ç–≤–µ—Ç API (JSON):", data)  

                if data and isinstance(data, list) and "url" in data[0]:
                    cat_url = data[0]["url"]
                    await message.answer_photo(photo=cat_url)
                else:
                    print("–û—à–∏–±–∫–∞: –∫–ª—é—á 'url' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ JSON")
                    await message.answer("–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∫–æ—Ç–∏–∫–∞ üòø")
            else:
                print(f"–û—à–∏–±–∫–∞ API: {response.status}")
                await message.answer(f"–û—à–∏–±–∫–∞ API: {response.status}")
